{"version":3,"file":"static/js/main_page.a976ef27.chunk.js","mappings":"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","sources":["components/CategoryReportList/NoResult/NoResult.styled.jsx","components/CategoryReportList/NoResult/NoResult.jsx","components/ReportBalance/ReportBalance.styled.jsx","components/Wrapper/Wrapper.styled.jsx","components/Balance/BalanceStyle.styled.jsx","components/Modal/ModalBalance.jsx","components/Balance/ChangeBalance/ChangeBalance.styled.jsx","components/Balance/ChangeBalance/ChangeBalance.jsx","components/Balance/ButtonToReport/ButtonToReport.styled.jsx","components/Balance/ButtonToReport/ButtonToReport.jsx","components/Balance/Balance.jsx","components/TransactionTable/TransactionTableStyle.styled.jsx","components/TransactionTable/TransactionTable.jsx","components/NavigationMobile/NavigationLink/NavigationLinkStyle.styled.jsx","components/NavigationMobile/NavigationLink/NavigationLink.jsx","components/NavigationMobile/NavMobile.styled.jsx","components/NavigationMobile/NavigationMain.js","components/TypeOperationMain/TypeOperation.styled.jsx","components/TypeOperationMain/TypeOperationMain.jsx","components/Summary/SummaryStyle.styled.jsx","components/Summary/SummaryTable.jsx","pages/MainPage.jsx","redux/getTransaction/transaction-selector.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport {device} from '../../../styles/utils'\r\n\r\nexport const NoResultDiv = styled.div`\r\npadding: 10px;\r\n\r\n& > img {\r\n    margin: 0px auto;\r\n\r\n    @media${device.tabletMax}{\r\n        width: 320px;\r\n    }\r\n    @media${device.tablet}{\r\n        width: 768px;\r\n    }\r\n    @media${device.desktop}{\r\n        width: 800px;\r\n    }\r\n}\r\n`\r\n","import { NoResultDiv } from './NoResult.styled';\r\nimport noResult from '../../../assets/img/noResult.png';\r\n\r\nfunction NoResult() {\r\n  return (\r\n    <NoResultDiv>\r\n        <img  src={noResult} alt=\"noResult\"/>\r\n    </NoResultDiv>\r\n  );\r\n}\r\n\r\nexport {NoResult}\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const ReportBalanceWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 40px;\r\n  padding: 21px 0px 26px 0px;\r\n\r\n  background: ${colors.white};\r\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\r\n  border-radius: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 30px;\r\n    padding: 16px 0px 16px 0px;\r\n\r\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n    border-radius: 30px;\r\n  }\r\n`;\r\nexport const ReportBalanceDiv = styled.div`\r\n  position: relative;\r\n  padding: 0px 15px;\r\n\r\n  @media ${device.tablet} {\r\n    display: flex;\r\n    padding: 0px 20px;\r\n  }\r\n\r\n  &:nth-child(1):after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -12px;\r\n    right: 0;\r\n    border-right: 1px solid ${colors.lineColor};\r\n    height: 70px;\r\n\r\n    @media ${device.tablet} {\r\n      top: -10px;\r\n      right: 0;\r\n      height: 36px;\r\n    }\r\n  }\r\n`;\r\nexport const ReportBalanceSum = styled.p`\r\n  margin: 0px;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  letter-spacing: 0.04em;\r\n\r\n  color: ${(props) => (props.expenses ? `${colors.redColor}` : `${colors.greenColor}`)};\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { device, colors } from \"../../styles/utils\";\r\nimport pairCabbages from \"../../assets/img/pairCabbages.png\";\r\nimport cabbagesBottom from \"../../assets/img/cabbagesBottom.png\";\r\n\r\n\r\nexport const ContentWrapper = styled.div`\r\n  width: 100%;\r\n  padding-top: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: calc(100vh - 56px);\r\n  background-repeat: no-repeat;\r\n\r\n  @media ${device.tablet} {\r\n    justify-content: flex-start;\r\n    padding: 40px 30px 83px;\r\n    background-image: url(${pairCabbages});\r\n    background-position: calc((100% / 2) + 200px) calc(100% - 24px);\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    max-width: 1240px;\r\n    padding: 40px 90px 83px;\r\n    background-image: url(${cabbagesBottom});\r\n    background-position: 50% calc(100% + 25px);\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 20px 60px 20px;\r\n    background: ${colors.white};\r\n    border-radius: 0px 0px 30px 30px;\r\n  }\r\n`;\r\n\r\nexport const DesktopOverlayShadow = styled.div`\r\n  @media ${device.desktop} {\r\n    width: 100%;\r\n    background: ${colors.white};\r\n    border-radius: 0px 30px 30px 30px;\r\n    box-shadow: 0 10px 60px rgba(170, 178, 197, 0.2);\r\n  }\r\n`;\r\nexport const OverlayMobile = styled.div`\r\n  align-content: flex-end;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const AuthWrapper = styled.div`\r\n  position: absolute;\r\n  top: 255px;\r\n  left: 50%;\r\n  -webkit-transform: translate(-50%);\r\n  transform: translate(-50%);\r\n\r\n  padding: 40px 18px 53px 29px;\r\n  padding: 40px 18px 53px 18px;\r\n  width: 300px;\r\n  height: 525px;\r\n  background: ${colors.white};\r\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\r\n  border-radius: 30px;\r\n\r\n  @media ${device.tablet} {\r\n    top: 300px;\r\n    width: 436px;\r\n    height: 535px;\r\n    padding: 50px 85px 53px 85px;\r\n  }\r\n  @media ${device.desktop} {\r\n    top: 173px;\r\n    left: 74%;\r\n  }\r\n`;\r\n\r\nexport const ReportPageWrapper = styled.div`\r\n  padding: 15px 0px;\r\n\r\n  @media ${device.tablet} {\r\n\r\n    padding: 32px 0px 76px;\r\n    background-image: url(${pairCabbages});\r\n    background-position: calc((100% / 2) + 200px) calc(100% + 40px);\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n   background-image: url(${cabbagesBottom});\r\n   background-position: 50% calc(100% - 20px);\r\n\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    width: 1060px;\r\n    margin: 0px auto;\r\n    padding: 40px 0px 75px 0px;\r\n  }\r\n`;\r\n\r\nexport const ChartTabletWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 422px;\r\n  padding: 20px 15px;\r\n  background: ${colors.white};\r\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n  border-radius: 30px;\r\n`;\r\n\r\nexport const ReportPageTopWrapper = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const WrapperLoginContainer = styled.section`\r\n  height: 750px;\r\n  @media ${device.desktop} {\r\n    height: 0;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { device } from \"../../styles/utils\";\r\n\r\nexport const BalanceWrapper = styled.section`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-bottom: 42px;\r\n\r\n  @media ${device.tablet} {\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n    width: 665px;\r\n    padding-bottom: 58px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    justify-content: center;\r\n    width: 1060px;\r\n    padding-bottom: 9px;\r\n  }\r\n`;\r\n","import { createPortal } from \"react-dom\";\r\nimport {\r\n    ModalBalanceContent,\r\n    ModalBackdrop,\r\n    ModalTitleTxtB1,\r\n    ModalTitleTxtB2,\r\n} from \"./ModalStyles.styled\";\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\n\r\nfunction ModalBalance({\r\n    onClose,\r\n    modalTxtB1 = 'Привет! Для начала работы внеси текущий баланс своего счета!',\r\n    modalTxtB2 = 'Ты не можешь тратить деньги пока их у тебя нет :)',\r\n    \r\n}) {\r\n    const handleCloseModal = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    return createPortal(\r\n       <ModalBackdrop onClick={handleCloseModal}>\r\n            <ModalBalanceContent onClick={handleCloseModal}>               \r\n                <ModalTitleTxtB1>\r\n                    {modalTxtB1}\r\n                </ModalTitleTxtB1>\r\n                <ModalTitleTxtB2>\r\n                    {modalTxtB2}\r\n                </ModalTitleTxtB2>\r\n            </ModalBalanceContent>\r\n        </ModalBackdrop>,\r\n        modalRoot,\r\n  );\r\n}\r\nexport default ModalBalance;","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../../styles/utils\";\r\n\r\nexport const ChangeBalanceWrapper = styled.div`\r\n  margin-bottom: 40px;\r\n  @media ${device.tablet} {\r\n    margin-bottom: 0;\r\n    margin-left: 40px;\r\n    display: flex;\r\n  }\r\n  @media ${device.desktop} {\r\n    justify-content: center;\r\n  }\r\n`;\r\nexport const LabelBalance = styled.label`\r\n  position: relative;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 10px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  color: ${colors.black};\r\n  @media ${device.tablet} {\r\n    top: 0;\r\n    right: 12px;\r\n  }\r\n`;\r\n\r\nexport const ChangeBalanceInput = styled.input`\r\n  outline: none;\r\n  width: 123px;\r\n  padding: 0;\r\n  font-weight: bold;\r\n  text-align: right;\r\n  color:  ${colors.black};\r\n  border: 2px solid  ${colors.white};\r\n  border-radius: 22px 0px 0px 22px;\r\n  background: none;\r\n\r\n  padding: 13px 38px 13px 0;\r\n  &::placeholder {\r\n    color:  ${colors.black};\r\n  }\r\n  @media ${device.tablet} {\r\n    border-radius: 16px;\r\n  }\r\n`;\r\n\r\nexport const ChangeBalanceButton = styled.button`\r\n  display: inline-block;\r\n  width: 123px;\r\n  height: 44px;\r\n  font-weight: normal;\r\n  text-transform: uppercase;\r\n  color:  ${colors.textColorSecond};\r\n  text-align: center;\r\n  background: none;\r\n  border: 2px solid ${colors.white};\r\n  border-left: none;\r\n  border-radius: 0px 22px 22px 0px;\r\n  &:hover {\r\n    color:  ${colors.white};\r\n    background:  ${colors.orange};\r\n    border:  ${colors.orange};\r\n  }\r\n  &:focus {\r\n    color: ${colors.white};\r\n    background: ${colors.orange};\r\n    border: ${colors.orange};\r\n  }\r\n  @media ${device.tablet} {\r\n    border-radius: 16px;\r\n    margin-left: 15px;\r\n  }\r\n`;\r\n\r\nexport const BalanceText = styled.p`\r\n  margin-bottom: 6px;\r\n  font-weight: 500;\r\n  color: ${colors.textColorSecond};\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 0px;\r\n    margin-right: 21px;\r\n    margin-left: 30px;\r\n    padding: 14px 0px;\r\n  }\r\n`;\r\n\r\nexport const OvalBalanceSpan = styled.div`\r\n  padding-bottom: 40px;\r\n\r\n  @media ${device.tablet} {\r\n    display: flex;\r\n    padding-bottom: 0px;\r\n  }\r\n`;\r\n\r\nexport const OvalBalanceDiv = styled.div`\r\n  display: inline-block;\r\n  width: 183px;\r\n\r\n  padding: 14px 5px;\r\n  font-weight: bold;\r\n  color: ${colors.black};\r\n\r\n  border: 2px solid ${colors.white};\r\n  border-radius: 22px 22px 22px 22px;\r\n  background: none;\r\n\r\n  @media ${device.tablet} {\r\n    width: 125px;\r\n    padding: 13px 5px;\r\n  }\r\n`;\r\n\r\nexport const BalanceTextOval = styled.p`\r\n  margin-bottom: 6px;\r\n  font-weight: 500;\r\n  color: ${colors.textColorSecond};\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 0px;\r\n    margin-right: 21px;\r\n    padding: 14px 0px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getBalanceUser } from \"../../../redux/getBalance/balance-selector\";\r\nimport { getDate } from \"../../../redux/setDate/date-selector\";\r\nimport { getUpdateBalanceUser } from \"../../../redux/getBalance/balance-operation\";\r\nimport { getUserTransaction } from \"../../../redux/getTransaction/transaction-operation\";\r\nimport { ModalBalance } from \"../../Modal\";\r\nimport {\r\n  ChangeBalanceWrapper,\r\n  ChangeBalanceInput,\r\n  ChangeBalanceButton,\r\n  Span,\r\n  OvalBalanceSpan,\r\n  OvalBalanceDiv,\r\n  BalanceTextOval,\r\n  BalanceText,\r\n  LabelBalance,\r\n} from \"./ChangeBalance.styled\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction ChangeBalance() {\r\n  const dispatch = useDispatch();\r\n  const [showBalanceModal, setShowBalanceModal] = useState(true);\r\n  const balance = useSelector(getBalanceUser);\r\n  const date = useSelector(getDate);\r\n  //value from input\r\n  const [valueBalance, setValueBalance] = useState(\"\");\r\n\r\n  // Coordinates for Modal\r\n  const ref = useRef();\r\n  const [coordinates, setCoordinates] = useState('');\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const rect = ref.current.getBoundingClientRect();\r\n      setCoordinates(rect)\r\n    })\r\n  }, []);\r\n\r\n  console.log('coordinates Input: ', coordinates);\r\n  // End of part with coordinates\r\n\r\n  useEffect(() => {\r\n    dispatch(getUpdateBalanceUser());\r\n  }, [dispatch]);\r\n  // input\r\n  const setBalance = e => {\r\n    setValueBalance(e.target.value);\r\n  };\r\n  // form handle Submit\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    // input value to number\r\n    const fixBalanceValue = parseFloat(valueBalance).toFixed(2);\r\n\r\n    if (isNaN(valueBalance) || !valueBalance) {\r\n      toast.error(`проверте данные вы ввели: ${valueBalance}`);\r\n      // setValueBalance(\"\");\r\n      return;\r\n    }\r\n\r\n    const dateForDB = date.replaceAll(\"/\", \"\");\r\n    const newTransaction = {\r\n      date: dateForDB,\r\n      description: \"Пополнение баланса\",\r\n      category: \"Доп. доход\",\r\n      value: fixBalanceValue,\r\n      income: true,\r\n    };\r\n\r\n    const { status } = await axios.post(\"/api/v1/transactions\", newTransaction);\r\n    if (status === 201) {\r\n      dispatch(getUpdateBalanceUser());\r\n      dispatch(getUserTransaction());\r\n      removeBalanceModal();\r\n      setValueBalance(\"\");\r\n      toast.success(\"Первое пополнение прошло успешно:)\");\r\n    }\r\n  };\r\n\r\n  const removeBalanceModal = () => {\r\n    setShowBalanceModal(!showBalanceModal);\r\n  };\r\n  //const setBalance = e => {\r\n  //const conversionToNumber = Number(e.target.value);\r\n  //setValueBalance(conversionToNumber);\r\n\r\n  // let elem = document.querySelector('#input');\r\n\r\n  // console.log(elem.getBoundingClientRect());\r\n\r\n  // function getCoords(elem) {\r\n  //   let box = elem.getBoundingClientRect();\r\n  \r\n  //   return {\r\n  //     top: Math.round(box.top + pageYOffset),\r\n  //     left: Math.round(box.left + pageXOffset)\r\n  //   };\r\n  // }\r\n\r\n  return (\r\n    <ChangeBalanceWrapper>\r\n      {balance ? (\r\n        <OvalBalanceSpan>\r\n          <BalanceTextOval>Баланс:</BalanceTextOval>\r\n          <OvalBalanceDiv>{[balance, \" \", \"UAH\"]}</OvalBalanceDiv>\r\n        </OvalBalanceSpan>\r\n      ) : (\r\n        <>\r\n          <BalanceText>Баланс:</BalanceText>\r\n          <form onSubmit={handleSubmit}>\r\n            <LabelBalance htmlFor=\"balance\">\r\n              <ChangeBalanceInput\r\n                id=\"input\"\r\n                type=\"text\"\r\n                name=\"balance\"\r\n                // pattern=\"^[ 0-9]+$\"\r\n                placeholder=\"00.00\"\r\n                value={valueBalance}\r\n                onChange={setBalance}\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                ref={ref}\r\n              />\r\n              <Span>UAH</Span>\r\n            </LabelBalance>\r\n            <ChangeBalanceButton type=\"submit\">Подтвердить</ChangeBalanceButton>\r\n          </form>\r\n        </>\r\n      )}\r\n\r\n      {/* --------Modal------------- */}\r\n      {showBalanceModal && !balance && (\r\n        <ModalBalance coordinates={coordinates} onClose={removeBalanceModal} />\r\n      )}\r\n      {/* --------------------- */}\r\n    </ChangeBalanceWrapper>\r\n  );\r\n}\r\nexport default ChangeBalance;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../../styles/utils\";\r\n\r\nexport const BtnToReport = styled.button`\r\n  display: flex;\r\n  align-items: baseline;\r\n  letter-spacing: 0.04em;\r\n  padding: 5px;\r\n  color: ${colors.textColor};\r\n  background: transparent;\r\n  border: none;\r\n  margin: 0 auto 40px auto;\r\n  transition: color ${colors.animation};\r\n\r\n  @media ${device.tablet} {\r\n    margin: 0;\r\n    padding: 14px 10px 10px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 30px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${colors.orange};\r\n  }\r\n\r\n  & > svg {\r\n    fill: currentColor;\r\n  }\r\n`;\r\n\r\nexport const BtnReportText = styled.span`\r\n   width: 115px;\r\n   margin-right: 15px;\r\n   letter-spacing: 0.04em;\r\n   color: ${colors.textColorSecond}\r\n   outline: 1px solid red;\r\n`;\r\n","import { SvgIcon } from \"../../SvgIcon\";\r\nimport { BtnToReport, BtnReportText } from \"./ButtonToReport.styled\";\r\n\r\nfunction ButtonToReport({ onClick }) {\r\n  return (\r\n    <>\r\n      <BtnToReport type=\"button\" onClick={onClick}>\r\n        <BtnReportText>Перейти к отчетам</BtnReportText>\r\n        <SvgIcon w={14} h={14} idIcon={\"#icon-statistic\"} />\r\n      </BtnToReport>\r\n    </>\r\n  );\r\n}\r\nexport default ButtonToReport;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Media from \"react-media\";\r\nimport { BalanceWrapper } from \"./BalanceStyle.styled\";\r\nimport { ChangeBalance } from \"./ChangeBalance\";\r\nimport { CalendarMUI } from \"../CalendarMUI\";\r\nimport { ButtonToReport } from \"./ButtonToReport\";\r\nimport { LoaderReport } from \"../Loader\";\r\nimport { loadingOnBalance } from \"../../redux/getBalance/balance-selector\";\r\n\r\nfunction Balance() {\r\n  const navigate = useNavigate();\r\n  const isLoading = useSelector(loadingOnBalance);\r\n\r\n  const clickToReport = () => {\r\n    navigate(\"/report\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderReport />}\r\n      <BalanceWrapper>\r\n        <ButtonToReport onClick={clickToReport} />\r\n        <ChangeBalance />\r\n        <Media query=\"(max-width: 767.98px)\" render={() => <CalendarMUI />} />\r\n      </BalanceWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const TransactionSection = styled.div`\r\n  margin: 0 auto;\r\n\r\n  @media ${device.tablet} {\r\n    margin-left: 0;\r\n    padding: 0 30px 48px;\r\n    background: ${colors.white};\r\n    box-shadow: 0px 10px 60px 0px rgba(170, 178, 197, 0.1);\r\n    border-radius: 0px 0px 30px 30px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    padding: 0;\r\n    box-shadow: 0 0 0 0;\r\n    background: transparent;\r\n    border-radius: 20px 20px 0px 0px;\r\n  }\r\n`;\r\n\r\nexport const TableTransaction = styled.div`\r\n  max-width: 282px;\r\n  min-height: 200px;\r\n  margin: auto;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    min-width: 605px;\r\n    min-height: 300px;\r\n    background-color: ${colors.white};\r\n    box-shadow: 0px 10px 30px 0px rgb(170 178 197 / 20%);\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    min-width: 760px;\r\n    margin: 0;\r\n  }\r\n`;\r\nexport const TableHeadTransaction = styled.div`\r\n  @media ${device.tabletMax} {\r\n    display: none;\r\n  }\r\n`;\r\nexport const TrHeadTransaction = styled.div`\r\n  @media ${device.tablet} {\r\n    height: 40px;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    line-height: 1.16;\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    letter-spacing: 0.02em;\r\n    text-transform: uppercase;\r\n    background-color: ${colors.bgSummary};\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n`;\r\nexport const ThHeadTransaction = styled.div`\r\n  :nth-of-type(1) {\r\n    @media ${device.tablet} {\r\n      width: 66px;\r\n      margin-right: 27px;\r\n      margin-left: 10px;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      width: 84px;\r\n      margin-right: 20px;\r\n      margin-left: 10px;\r\n      text-align: start;\r\n      padding-left: 10px;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(2) {\r\n    @media ${device.tablet} {\r\n      width: 97px;\r\n      margin-right: 104px;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      width: 74px;\r\n      margin-right: 150px;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(3) {\r\n    @media ${device.tablet} {\r\n      width: 120px;\r\n      margin-right: 16px;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      width: 172px;\r\n      margin-right: 33px;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(4) {\r\n    @media ${device.tablet} {\r\n      width: 104px;\r\n      margin-right: 63px;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      margin-right: 109px;\r\n      padding-left: 52px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TableBodyTransaction = styled.div`\r\n  width: 100%;\r\n  max-height: 250px;\r\n  overflow-y: scroll;\r\n\r\n  @media ${device.tablet} {\r\n    border: none;\r\n  }\r\n  @media ${device.desktop} {\r\n    border: none;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  ,\r\n  &::-webkit-scrollbar-thumb {\r\n    background: ${colors.orange};\r\n    border-radius: 15px;\r\n  }\r\n`;\r\n\r\nexport const TrBodyTransaction = styled.div`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.16;\r\n  letter-spacing: 0.04em;\r\n  background-color: ${colors.white};\r\n  height: 50px;\r\n  margin-bottom: 2px;\r\n  min-width: 245px;\r\n  border-bottom: 2px solid ${colors.bgSummary};\r\n  @media ${device.tabletMax} {\r\n    display: grid;\r\n    border-bottom: 2px solid ${colors.bgSummary};\r\n    align-items: center;\r\n    padding: 10px 0;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    min-width: 280px;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n  }\r\n`;\r\nexport const TdBodyTransaction = styled.div`\r\n  :nth-of-type(1) {\r\n    @media ${device.tabletMax} {\r\n      grid-row: 2/4;\r\n      width: 44px;\r\n      font-size: 8px;\r\n      line-height: 1.12;\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n      width: 84px;\r\n      margin-right: 20px;\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(2) {\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n\r\n    @media ${device.tabletMax} {\r\n      width: 68px;\r\n      padding-bottom: 5px;\r\n      font-weight: 700;\r\n      text-align: start;\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n      margin-right: 31px;\r\n      width: 157px;\r\n      text-align: start;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      width: 188px;\r\n      margin-right: 61px;\r\n      display: flex;\r\n      justify-content: flex-start;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(3) {\r\n    @media ${device.tabletMax} {\r\n      width: 66px;\r\n      margin: 20px 5px 0 0;\r\n      font-size: 8px;\r\n      line-height: 1.12;\r\n      grid-row: 1/4;\r\n      display: grid;\r\n      align-items: center;\r\n      justify-items: stretch;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n      text-align: start;\r\n      padding-left: 30px;\r\n      width: 111px;\r\n      margin-right: 7px;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      width: 116px;\r\n      margin-right: 49px;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(4) {\r\n    font-weight:700;\r\n    font-size:12px;\r\n    text-align: start;\r\n    padding-left: 30px;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n\r\n    @media ${device.tabletMax} {\r\n      width: 84px;\r\n      grid-row: 1/4;\r\n      font-weight: 700;\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n      padding-left: 35px;\r\n      width: 103px;\r\n      margin: 0px 15px;\r\n    }\r\n\r\n    @media ${device.desktop} {\r\n      padding-left: 47px;\r\n      width: 118px;\r\n      margin-right: 23px;\r\n    }\r\n  }\r\n\r\n  :nth-of-type(5) {\r\n    grid-row: 1/4;\r\n    border: none;\r\n    border-radius: 50%;\r\n    width: 32px;\r\n    padding: 7px;\r\n\r\n    @media ${device.tablet} {\r\n      margin-right: 26px;\r\n    }\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: ${colors.bgSummary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n// import { SvgIcon } from \"../SvgIcon\";\r\nimport { useTable } from \"react-table\";\r\nimport { Tooltip, createTheme, ThemeProvider } from \"@mui/material\";\r\nimport {\r\n  TableBodyTransaction,\r\n  TableHeadTransaction,\r\n  TableTransaction,\r\n  ThHeadTransaction,\r\n  TransactionSection,\r\n  TrHeadTransaction,\r\n  TrBodyTransaction,\r\n  TdBodyTransaction,\r\n} from \"./TransactionTableStyle.styled\";\r\nimport { SvgIcon } from \"../SvgIcon\";\r\nimport { ReportBalanceSum } from \"../ReportBalance/ReportBalance.styled\";\r\nimport { getUserTransaction } from \"../../redux/getTransaction/transaction-operation\";\r\nimport { getUserTransactionTheLastSixMounts } from \"../../redux/getTransaction/transaction-selector\";\r\nimport { getTypeTransaction } from \"../../redux/typeTransaction/transaction-selector\";\r\nimport { getUpdateBalanceUser } from \"../../redux/getBalance/balance-operation\";\r\nimport { getBalanceUser } from \"../../redux/getBalance/balance-selector\";\r\n\r\nimport { NoResult } from \"../CategoryReportList/NoResult\";\r\n\r\nconst theme = createTheme({\r\n  components: {\r\n    MuiTooltip: {\r\n      styleOverrides: {\r\n        tooltip: {\r\n          fontSize: \"10px\",\r\n          color: \"white\",\r\n          backgroundColor: \"orange\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction TransactionTable() {\r\n  const arrayDataUser = useSelector(getUserTransactionTheLastSixMounts);\r\n  const bull = useSelector(getTypeTransaction);\r\n  const userBalance = useSelector(getBalanceUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Дата\",\r\n        accessor: \"date\",\r\n      },\r\n      {\r\n        Header: \"Описание\",\r\n        accessor: \"description\",\r\n      },\r\n      {\r\n        Header: \"Категория\",\r\n        accessor: \"category\",\r\n      },\r\n      {\r\n        Header: \"Сумма\",\r\n        accessor: \"value\",\r\n      },\r\n      {\r\n        Header: \"\",\r\n        accessor: \"_id\",\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const data = React.useMemo(() => {\r\n    if (window.innerWidth >= 768) {\r\n      return arrayDataUser\r\n        ? bull\r\n          ? arrayDataUser.lastSixMonthsTransaction.income\r\n          : arrayDataUser.lastSixMonthsTransaction.expense\r\n        : [];\r\n    }\r\n    return arrayDataUser ? arrayDataUser.lastSixMonthsTransactionForMobile : [];\r\n  }, [bull, arrayDataUser]);\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ data, columns });\r\n\r\n  const deleteTransaction = async ({ id, value }) => {\r\n    if (userBalance - value < 0) {\r\n      toast.error(\r\n        \"Данная операция невозможна! Баланс не может быть отрицательным!\",\r\n      );\r\n      return;\r\n    }\r\n    const response = await axios.delete(`/api/v1/transactions/${id}`);\r\n    if (response.status === 200) {\r\n      dispatch(getUserTransaction());\r\n      dispatch(getUpdateBalanceUser());\r\n    }\r\n    return;\r\n  };\r\n\r\n  const btnDel = ({ id, value }) => (\r\n    <button\r\n      type=\"button\"\r\n      style={{ border: \"none\" }}\r\n      onClick={() => deleteTransaction({ id, value })}\r\n    >\r\n      <SvgIcon w={16} h={16} idIcon={\"#icon-delete\"} />\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <TransactionSection>\r\n      <TableTransaction {...getTableProps()}>\r\n        <TableHeadTransaction>\r\n          {headerGroups.map((headerGroup, i) => (\r\n            <TrHeadTransaction key={i} {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column, i) => (\r\n                <ThHeadTransaction key={i} {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                </ThHeadTransaction>\r\n              ))}\r\n            </TrHeadTransaction>\r\n          ))}\r\n        </TableHeadTransaction>\r\n        {data.length > 0 ? (\r\n          <TableBodyTransaction {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              row.values._id = btnDel({\r\n                id: row.values._id,\r\n                value: row.values.value,\r\n              });\r\n              row.values.value = row.original.income ? (\r\n                <ReportBalanceSum>{`${row.values.value} грн.`}</ReportBalanceSum>\r\n              ) : (\r\n                <ReportBalanceSum\r\n                  expenses\r\n                >{`-${row.values.value} грн.`}</ReportBalanceSum>\r\n              );\r\n              prepareRow(row);\r\n\r\n              return (\r\n                <TrBodyTransaction {...row.getRowProps()} key={i}>\r\n                  {row.cells.map((cell, i) => {\r\n                    const currentDesc = cell.value;\r\n                    return (\r\n                      <ThemeProvider theme={theme} key={i}>\r\n                        <Tooltip title={currentDesc} placement=\"right\">\r\n                          <TdBodyTransaction {...cell.getCellProps()}>\r\n                            {cell.render(\"Cell\")}\r\n                          </TdBodyTransaction>\r\n                        </Tooltip>\r\n                      </ThemeProvider>\r\n                    );\r\n                  })}\r\n                </TrBodyTransaction>\r\n              );\r\n            })}\r\n          </TableBodyTransaction>\r\n        ) : (\r\n          <NoResult />\r\n        )}\r\n      </TableTransaction>\r\n    </TransactionSection>\r\n  );\r\n}\r\n\r\nexport default TransactionTable;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../../../styles/utils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  width: calc(100vw / 2 - 2px);\r\n  height: 53px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: ${colors.black};\r\n  outline: none;\r\n  border: none;\r\n  background: ${colors.bgSummary};\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 2px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${colors.white};\r\n    background: ${colors.orange};\r\n  }\r\n`;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { StyledLink } from \"./NavigationLinkStyle.styled\";\r\n\r\nfunction NavigationLink({ pathTo, text, onClick }) {\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n      <StyledLink\r\n        to={{\r\n          pathname: `/${pathTo}`,\r\n          state: {\r\n            from: location,\r\n            label: \"back\",\r\n          },\r\n        }}\r\n        onClick={onClick}\r\n      >\r\n        {text}\r\n        {/* <SquareButton></SquareButton> */}\r\n      </StyledLink>\r\n    </>\r\n  );\r\n}\r\nexport default NavigationLink;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const NavMobileWrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  width: 100vw;\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { changeTypeTransaction } from \"../../redux/typeTransaction/transaction-slice\";\r\nimport { NavigationLink } from \"./NavigationLink\";\r\nimport { NavMobileWrapper } from \"./NavMobile.styled\";\r\n\r\nfunction NavigationMainMobile() {\r\n  const dispatch = useDispatch();\r\n\r\n  const changeTypeOperation = type => {\r\n    dispatch(changeTypeTransaction(type));\r\n  };\r\n\r\n  return (\r\n    <NavMobileWrapper>\r\n      <NavigationLink\r\n        pathTo={\"expense\"}\r\n        text={\"расход\"}\r\n        onClick={() => changeTypeOperation(false)}\r\n      />\r\n      <NavigationLink\r\n        pathTo={\"income\"}\r\n        text={\"доход\"}\r\n        onClick={() => changeTypeOperation(true)}\r\n      />\r\n    </NavMobileWrapper>\r\n  );\r\n}\r\nexport default NavigationMainMobile;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors } from \"../../styles/utils\";\r\n\r\nexport const TypeOperationWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: start;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const ChooseOperationButton = styled.button`\r\n  display: inline-block;\r\n  width: 125px;\r\n  height: 44px;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.02em;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n\r\n  border: none;\r\n  border-radius: 20px 20px 0px 0px;\r\n\r\n  color: ${(props) => props.isActive} ;\r\n  background-color: ${(props) => props.isBgActive} ;\r\n\r\n  transition: color ${colors.animation}\r\n\r\n  &:hover {\r\n    color: ${colors.orange};\r\n  }\r\n  &:focus {\r\n    color: ${colors.orange};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  TypeOperationWrapper,\r\n  ChooseOperationButton,\r\n} from \"./TypeOperation.styled\";\r\nimport { getTypeTransaction } from \"../../redux/typeTransaction/transaction-selector\";\r\nimport { changeTypeTransaction } from \"../../redux/typeTransaction/transaction-slice\";\r\nimport { colors } from \"../../styles/utils\";\r\n\r\nfunction TypeOperationMain() {\r\n  const transaction = useSelector(getTypeTransaction);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeTypeOperation = e => {\r\n    switch (e.target.value) {\r\n      case \"доход\":\r\n        dispatch(changeTypeTransaction(true));\r\n\r\n        break;\r\n      case \"расход\":\r\n        dispatch(changeTypeTransaction(false));\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TypeOperationWrapper>\r\n      <>\r\n        <ChooseOperationButton\r\n          isActive={transaction ? colors.black : colors.orange}\r\n          isBgActive={transaction ? colors.bgBtnPrimary : colors.bgBtnActive}\r\n          value=\"расход\"\r\n          onClick={changeTypeOperation}\r\n        >\r\n          расход\r\n        </ChooseOperationButton>\r\n        <ChooseOperationButton\r\n          isActive={transaction ? colors.orange : colors.black}\r\n          isBgActive={transaction ? colors.bgBtnActive : colors.bgBtnPrimary}\r\n          value=\"доход\"\r\n          onClick={changeTypeOperation}\r\n        >\r\n          доход\r\n        </ChooseOperationButton>\r\n      </>\r\n    </TypeOperationWrapper>\r\n  );\r\n}\r\nexport default TypeOperationMain;\r\n\r\n//  from Main Page\r\n//  const transaction = useSelector(getTypeTransaction);\r\n//   const dispatch = useDispatch();\r\n//   console.log(transaction);\r\n//   const changeTypeOperation = (e) => {\r\n//     switch (e.target.value) {\r\n//       case \"доход\":\r\n//         dispatch(changeTypeTransaction(true));\r\n//         // setData(DBarray.income);\r\n//         break;\r\n//       case \"расход\":\r\n//         dispatch(changeTypeTransaction(false));\r\n//         // setData(DBarray.costs);\r\n//         break;\r\n//       default:\r\n//         break;\r\n//     }\r\n//   };\r\n\r\n// {/* <button value=\"расход\" onClick={changeTypeOperation}>\r\n//   расход\r\n// </button>\r\n// <button value=\"доход\" onClick={changeTypeOperation}>\r\n//   доход\r\n// </button> */}\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const SummaryTableContainer = styled.div`\r\n  width: 230px;\r\n      max-height: 306px;\r\n  /* margin: 0 auto; */\r\n  padding-top: 40px;\r\n  margin-left: 30px;\r\n  border-radius: 20px 20px 20px 0;\r\n  box-shadow: 0px 10px 30px 0px rgb(170 178 197 / 20%);     //?????\r\n  @media ${device.desktop} {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const SummaryTab = styled.div`\r\n  /* width: 230px; */\r\n  /* padding: 40px 0px 40px 30px;\r\n  border-radius: 20px 20px 20px 0; */\r\n`;\r\n\r\nexport const SummaryHead = styled.div`\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  line-height: 1.16;\r\n  letter-spacing: 0.02em;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SummaryBody = styled.div`\r\n   height: 228px;\r\n   background-color: ${colors.bgSummary};\r\n`;\r\n\r\nexport const SummaryTr = styled.div`\r\n  height: 38px;\r\n  border-bottom: 2px solid ${colors.white};\r\n  background-color: ${colors.bgSummary};\r\n  border-radius: 20px 20px 0px 0px;\r\n  padding: 10px;\r\n  :last-child {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const SummaryTrBody = styled.div`\r\n  background-color: ${colors.bgSummary};\r\n  border-bottom: 2px solid ${colors.white};\r\n  height: 38px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n   text-transform: uppercase;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTable } from \"react-table\";\r\nimport {\r\n  SummaryTab,\r\n  SummaryHead,\r\n  SummaryTr,\r\n  SummaryTrBody,\r\n  SummaryTableContainer,\r\n} from \"./SummaryStyle.styled\";\r\nimport { getUserTransactionTheLastSixMounts } from \"../../redux/getTransaction/transaction-selector.js\";\r\nimport { getTypeTransaction } from \"../../redux/typeTransaction/transaction-selector.js\";\r\nimport { NoResult } from '../CategoryReportList/NoResult';\r\n\r\nfunction SummaryTable() {\r\n  const transaction = useSelector(getUserTransactionTheLastSixMounts);\r\n  const bull = useSelector(getTypeTransaction);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Сводка\",\r\n\r\n        columns: [\r\n          {\r\n            accessor: \"score0\",\r\n          },\r\n          {\r\n            accessor: \"score1\",\r\n            style: {\r\n              maxWidth: \"188px\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const data = React.useMemo(\r\n    () =>\r\n      transaction\r\n        ? bull\r\n          ? transaction.lastSixMonthsIncomes\r\n          : transaction.lastSixMonthsCosts\r\n        : [],\r\n    [bull, transaction],\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data,\r\n    });\r\n\r\n\r\n  return (\r\n    <SummaryTableContainer>\r\n      <SummaryTab {...getTableProps()}>\r\n        <SummaryHead>\r\n          {headerGroups.map(headerGroup => (\r\n            <SummaryTr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <div {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                </div>\r\n              ))}\r\n            </SummaryTr>\r\n          ))}\r\n        </SummaryHead>\r\n        {data.length > 0 ? (\r\n   <div {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n\r\n            return (\r\n              <SummaryTrBody {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <div {...cell.getCellProps()}>{cell.render(\"Cell\")}</div>\r\n                  );\r\n                })}\r\n              </SummaryTrBody>\r\n            );\r\n          })}\r\n        </div>\r\n): <NoResult/>}\r\n       \r\n      </SummaryTab>\r\n    </SummaryTableContainer>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default SummaryTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Media from \"react-media\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Balance } from \"../components/Balance\";\r\nimport { TransactionTable } from \"../components/TransactionTable\";\r\nimport { NavigationMainMobile } from \"../components/NavigationMobile\";\r\nimport { TypeOperationMain } from \"../components/TypeOperationMain\";\r\nimport { FormComponent } from \"../components/FormComponent\";\r\n\r\nimport {\r\n  ContentWrapper,\r\n  Overlay,\r\n  OverlayMobile,\r\n  DesktopOverlayShadow,\r\n} from \"../components/Wrapper/Wrapper.styled\";\r\nimport { SummaryTable } from \"../components/Summary\";\r\n\r\nimport { getUpdateBalanceUser } from \"../redux/getBalance/balance-operation\";\r\nimport { getUserTransaction } from \"../redux/getTransaction/transaction-operation\";\r\n\r\nexport default function Main() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUpdateBalanceUser());\r\n    dispatch(getUserTransaction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <Balance />\r\n      <Media\r\n        query=\"(min-width: 768px)\"\r\n        render={() => (\r\n          <>\r\n            <TypeOperationMain />\r\n            <DesktopOverlayShadow>\r\n              <FormComponent />\r\n              <Overlay>\r\n                <TransactionTable />\r\n                <SummaryTable />\r\n              </Overlay>\r\n            </DesktopOverlayShadow>\r\n          </>\r\n        )}\r\n      />\r\n      <Media\r\n        query=\"(min-width: 320px) and (max-width: 767.98px)\" //якщо не поставити .98 то таблиця при ширині 767 не відображається взагалі\r\n        render={() => (\r\n          <OverlayMobile>\r\n            <TransactionTable />\r\n            <NavigationMainMobile />\r\n          </OverlayMobile>\r\n        )}\r\n      />\r\n    </ContentWrapper>\r\n  );\r\n}\r\n","export const getUserTransactionTheLastSixMounts = state =>\r\n  state.dataTransaction.data;\r\nexport const transactionLoading = state => state.dataTransaction.isLoading;\r\n"],"names":["NoResultDiv","styled","device","NoResult","src","noResult","alt","ReportBalanceWrapper","colors","ReportBalanceDiv","ReportBalanceSum","props","expenses","ContentWrapper","pairCabbages","cabbagesBottom","Overlay","DesktopOverlayShadow","OverlayMobile","AuthWrapper","ReportPageWrapper","ChartTabletWrapper","ReportPageTopWrapper","WrapperLoginContainer","BalanceWrapper","modalRoot","document","querySelector","onClose","modalTxtB1","modalTxtB2","handleCloseModal","e","currentTarget","target","createPortal","onClick","ChangeBalanceWrapper","LabelBalance","Span","ChangeBalanceInput","ChangeBalanceButton","BalanceText","OvalBalanceSpan","OvalBalanceDiv","BalanceTextOval","dispatch","useDispatch","useState","showBalanceModal","setShowBalanceModal","balance","useSelector","getBalanceUser","date","getDate","valueBalance","setValueBalance","ref","useRef","coordinates","setCoordinates","useEffect","setTimeout","rect","current","getBoundingClientRect","console","log","getUpdateBalanceUser","handleSubmit","preventDefault","fixBalanceValue","parseFloat","toFixed","isNaN","toast","dateForDB","replaceAll","newTransaction","description","category","value","income","axios","status","getUserTransaction","removeBalanceModal","onSubmit","htmlFor","id","type","name","placeholder","onChange","autoComplete","autoFocus","BtnToReport","BtnReportText","SvgIcon","w","h","idIcon","navigate","useNavigate","isLoading","loadingOnBalance","Loader","query","render","CalendarMUI","TransactionSection","TableTransaction","TableHeadTransaction","TrHeadTransaction","ThHeadTransaction","TableBodyTransaction","TrBodyTransaction","TdBodyTransaction","theme","createTheme","components","MuiTooltip","styleOverrides","tooltip","fontSize","color","backgroundColor","arrayDataUser","getUserTransactionTheLastSixMounts","bull","getTypeTransaction","userBalance","columns","React","Header","accessor","data","window","innerWidth","lastSixMonthsTransaction","expense","lastSixMonthsTransactionForMobile","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","deleteTransaction","map","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","length","row","values","_id","style","border","btnDel","original","getRowProps","key","cells","cell","currentDesc","ThemeProvider","Tooltip","title","placement","getCellProps","StyledLink","Link","pathTo","text","location","useLocation","to","pathname","state","from","label","NavMobileWrapper","changeTypeOperation","changeTypeTransaction","TypeOperationWrapper","ChooseOperationButton","isActive","isBgActive","transaction","SummaryTableContainer","SummaryTab","SummaryHead","SummaryTr","SummaryTrBody","maxWidth","lastSixMonthsIncomes","lastSixMonthsCosts","Main","FormComponent","NavigationMain","dataTransaction","transactionLoading"],"sourceRoot":""}