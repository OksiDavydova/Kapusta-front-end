{"version":3,"file":"static/js/login_page.3321aa21.chunk.js","mappings":"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","sources":["components/Text/Text.styled.jsx","components/Wrapper/Wrapper.styled.jsx","components/Wrapper/WrapperAuth.jsx","components/Text/Text.jsx","components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","components/Title/TitleStyle.styled.jsx","components/Title/Title.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const SingleText = styled.p`\r\n  margin: auto;\r\n  margin-bottom: 24px;\r\n  width: ${(props) => props.width};\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: 0.04em;\r\n  text-transform: none;\r\n  text-align: ${(props) => props.align};\r\n  color: ${colors.textColor};\r\n  \r\n  @media ${device.tablet} {\r\n    margin:0;\r\n    margin-bottom: 20px;\r\n    text-align: left;\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    width: 269px;\r\n  }\r\n`;\r\n// ?????\r\nexport const ReportBalanceText = styled.p`\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: ${colors.textColor}\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 0px;\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { device, colors } from \"../../styles/utils\";\r\nimport pairCabbages from \"../../assets/img/pairCabbages.png\";\r\nimport cabbagesBottom from \"../../assets/img/cabbagesBottom.png\";\r\n\r\n\r\nexport const ContentWrapper = styled.div`\r\n  width: 100%;\r\n  padding-top: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: calc(100vh - 56px);\r\n  background-repeat: no-repeat;\r\n\r\n  @media ${device.tablet} {\r\n    justify-content: flex-start;\r\n    padding: 40px 30px 83px;\r\n    background-image: url(${pairCabbages});\r\n    background-position: calc((100% / 2) + 200px) calc(100% - 24px);\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    max-width: 1240px;\r\n    padding: 40px 90px 83px;\r\n    background-image: url(${cabbagesBottom});\r\n    background-position: 50% calc(100% + 25px);\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 20px 60px 20px;\r\n    background: ${colors.white};\r\n    border-radius: 0px 0px 30px 30px;\r\n  }\r\n`;\r\n\r\nexport const DesktopOverlayShadow = styled.div`\r\n  @media ${device.desktop} {\r\n    width: 100%;\r\n    background: ${colors.white};\r\n    border-radius: 0px 30px 30px 30px;\r\n    box-shadow: 0 10px 60px rgba(170, 178, 197, 0.2);\r\n  }\r\n`;\r\nexport const OverlayMobile = styled.div`\r\n  align-content: flex-end;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const AuthWrapper = styled.div`\r\n  position: absolute;\r\n  top: 255px;\r\n  left: 50%;\r\n  -webkit-transform: translate(-50%);\r\n  transform: translate(-50%);\r\n\r\n  padding: 40px 18px 53px 29px;\r\n  padding: 40px 18px 53px 18px;\r\n  width: 300px;\r\n  height: 525px;\r\n  background: ${colors.white};\r\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\r\n  border-radius: 30px;\r\n\r\n  @media ${device.tablet} {\r\n    top: 300px;\r\n    width: 436px;\r\n    height: 535px;\r\n    padding: 50px 85px 53px 85px;\r\n  }\r\n  @media ${device.desktop} {\r\n    top: 173px;\r\n    left: 74%;\r\n  }\r\n`;\r\n\r\nexport const ReportPageWrapper = styled.div`\r\n  padding: 15px 0px;\r\n\r\n  @media ${device.tablet} {\r\n\r\n    padding: 32px 0px 76px;\r\n    background-image: url(${pairCabbages});\r\n    background-position: calc((100% / 2) + 200px) calc(100% + 40px);\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n   background-image: url(${cabbagesBottom});\r\n   background-position: 50% calc(100% - 20px);\r\n\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    width: 1060px;\r\n    margin: 0px auto;\r\n    padding: 40px 0px 75px 0px;\r\n  }\r\n`;\r\n\r\nexport const ChartTabletWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 422px;\r\n  padding: 20px 15px;\r\n  background: ${colors.white};\r\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n  border-radius: 30px;\r\n`;\r\n\r\nexport const ReportPageTopWrapper = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const WrapperLoginContainer = styled.section`\r\n  height: 750px;\r\n  @media ${device.desktop} {\r\n    height: 0;\r\n  }\r\n`;\r\n","import {AuthWrapper} from './Wrapper.styled'\r\n\r\nfunction WrapperAuth({children}) {\r\n    return (\r\n        <AuthWrapper>\r\n       {children}\r\n        </AuthWrapper>\r\n    );\r\n  }\r\n  export {WrapperAuth};","import {SingleText} from './Text.styled'\r\n\r\nfunction Text({widthText, alignText, text}) {\r\n    return (\r\n      <>\r\n        <SingleText width={widthText} align={alignText}>{text}</SingleText>\r\n      </>\r\n    );\r\n  }\r\n  export {Text};","import styled from \"@emotion/styled\";\r\nimport { device, colors } from \"../../styles/utils\";\r\n\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // margin: 20px 9px 10px 9px;\r\n\r\n  @media ${device.tablet} {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 12px;\r\n\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: 0.04em;\r\n  text-align: left;\r\n  text-transform: none;\r\n\r\n  color: ${colors.black};\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 10px;\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  outline: none;\r\n  margin-bottom: 35px;\r\n  padding: 17px 20px;\r\n  border: none;\r\n  max-width: 253px;\r\n\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  letter-spacing: 0.04em;\r\n  text-align: left;\r\n  text-transform: none;\r\n\r\n  color: ${colors.textColor};\r\n\r\n  background: ${colors.inputBg};\r\n  border-radius: 30px;\r\n\r\n  &::placeholder {\r\n    color: ${colors.authText};\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    max-width: 265px;\r\n  }\r\n  :nth-of-type(2) {\r\n    @media ${device.tablet} {\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AuthFormButtonWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: auto;\r\n\r\n  @media ${device.tabletMax} {\r\n    width: 265px;\r\n    margin-left: -7px;\r\n  }\r\n`;\r\n\r\nexport const SpanEmail = styled.span`\r\n  position: absolute;\r\n  top: 30%;\r\n  color: ${colors.redColor};\r\n  text-align: left;\r\n  font-size: 10px;\r\n  font-style: italic;\r\n  @media ${device.tablet} {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const SpanPassword = styled.span`\r\n  position: absolute;\r\n  top: 70%;\r\n  padding-top: 5px;\r\n  color: ${colors.redColor};\r\n  text-align: left;\r\n  font-size: 10px;\r\n  font-style: italic;\r\n  @media ${device.tablet} {\r\n    font-size: 12px;\r\n    padding-top: 0;\r\n  }\r\n`;\r\n\r\nexport const SpanText = styled.span`\r\n  color: ${colors.textColor};\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUsers, signUpUsers } from \"../../redux/operation\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Form,\r\n  Label,\r\n  Input,\r\n  AuthFormButtonWrapper,\r\n  SpanEmail,\r\n  SpanPassword,\r\n  SpanText,\r\n} from \"./AuthForm.styled\";\r\nimport { Button } from \"../../components/Buttons\";\r\nimport { LoaderAuth } from \"../../components/Loader\";\r\nimport { authLoading } from \"../../redux/selectors\";\r\n\r\nfunction AuthForm() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(authLoading);\r\n\r\n  const textForInput = {\r\n    enter: \"вход\",\r\n    signup: \"регистрация\",\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data, event) => {\r\n    // доступ к тексту button (Используется библиотека emotion-style)\r\n    const { innerHTML } = event.nativeEvent.submitter;\r\n\r\n    switch (innerHTML) {\r\n      case `${textForInput.enter}`:\r\n        dispatch(\r\n          loginUsers({\r\n            email: data.email,\r\n            password: data.password,\r\n          })\r\n        );\r\n        break;\r\n      case `${textForInput.signup}`:\r\n        dispatch(\r\n          signUpUsers({\r\n            email: data.email,\r\n            password: data.password,\r\n          })\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    reset({ email: \"\", password: \"\" });\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderAuth />}\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Label>Электронная почта: </Label>\r\n        <Input\r\n          placeholder=\"your@mail.com\"\r\n          {...register(\"email\", {\r\n            required: true,\r\n            pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n          })}\r\n        />\r\n        {/* Сообщение об обязательном поле */}\r\n\r\n        {errors.email && (\r\n          <SpanEmail>\r\n            *Email is required. <SpanText>Example: email@email.com</SpanText>\r\n          </SpanEmail>\r\n        )}\r\n        <Label>Пароль: </Label>\r\n        <Input\r\n          placeholder=\"Пароль\"\r\n          {...register(\"password\", {\r\n            required: true,\r\n            pattern: /(?=.*[0-9])(?=.*[!@#-$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g,\r\n          })}\r\n        />\r\n        {errors.password && (\r\n          <SpanPassword>\r\n            *Password is required.\r\n            <SpanText>\r\n              Must be an uppercase letter, lowercase letter, number, and symbol.\r\n            </SpanText>\r\n          </SpanPassword>\r\n        )}\r\n\r\n        <AuthFormButtonWrapper>\r\n          <Button text={`${textForInput.enter}`} />\r\n          <Button\r\n            text={`${textForInput.signup}`}\r\n            onClick={handleSubmit(onSubmit)}\r\n          />\r\n        </AuthFormButtonWrapper>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nexport default AuthForm;\r\n","import styled from \"@emotion/styled\";\r\nimport { device } from \"../../styles/utils\";\r\nimport mainTitle from \"../../assets/img/mainTitle.png\";\r\n\r\nexport const MainTitle = styled.div`\r\nbackground-image: url(${mainTitle});\r\nwidth:183px;\r\nheight:63px;\r\nmargin: 86px 0 50px 49px;\r\nbackground-repeat: no-repeat;\r\nbackground-size: contain;\r\n   @media ${device.tablet} {\r\n width: 306px;\r\nheight: 100px;\r\nmargin: 90px 0 50px 148px;\r\n  };\r\n   @media ${device.desktop} {\r\n width: 377px;\r\nheight: 139px;\r\nmargin: 308px 127px 347px 108px;\r\n  };\r\n`;","import { MainTitle } from './TitleStyle.styled';\r\n\r\nconst Title = () => {\r\n    return (<MainTitle/>)\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { googleAuthUsers } from \"../redux/operation\";\r\nimport { WrapperAuth } from \"../components/Wrapper\";\r\nimport { WrapperLoginContainer } from \"../components/Wrapper/Wrapper.styled\";\r\nimport { GoogleLink } from \"../components/Buttons\";\r\nimport { Text } from \"../components/Text\";\r\nimport { AuthForm } from \"../components/AuthForm\";\r\nimport Title from \"../components/Title/Title\";\r\n\r\nconst firstText = \"Вы можете авторизоваться с помощью Google Account:\";\r\nconst secondText =\r\n  \"Или зайти с помощью e-mail и пароля, предварительно зарегистрировавшись:\";\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const getToken = localStorage.getItem(\"token\");\r\n\r\n  if (getToken) {\r\n    dispatch(googleAuthUsers(getToken));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <WrapperLoginContainer>\r\n        <Title />\r\n        <WrapperAuth>\r\n          <Text widthText={\"222px\"} text={firstText} />\r\n          <GoogleLink text={\"google\"} />\r\n          <Text widthText={\"242px\"} alignText={\"left\"} text={secondText} />\r\n          <AuthForm />\r\n        </WrapperAuth>\r\n      </WrapperLoginContainer>\r\n    </>\r\n  );\r\n}\r\n"],"names":["SingleText","styled","props","width","align","colors","device","ReportBalanceText","ContentWrapper","pairCabbages","cabbagesBottom","Overlay","DesktopOverlayShadow","OverlayMobile","AuthWrapper","ReportPageWrapper","ChartTabletWrapper","ReportPageTopWrapper","WrapperLoginContainer","WrapperAuth","children","Text","widthText","alignText","text","Form","Label","Input","AuthFormButtonWrapper","SpanEmail","SpanPassword","SpanText","dispatch","useDispatch","isLoading","useSelector","authLoading","textForInput","useForm","register","handleSubmit","reset","errors","formState","onSubmit","data","event","nativeEvent","submitter","innerHTML","loginUsers","email","password","signUpUsers","Loader","placeholder","required","pattern","onClick","MainTitle","mainTitle","LoginPage","getToken","localStorage","getItem","googleAuthUsers"],"sourceRoot":""}