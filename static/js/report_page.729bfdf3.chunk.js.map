{"version":3,"file":"static/js/report_page.729bfdf3.chunk.js","mappings":"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","sources":["components/CategoryReportList/NoResult/NoResult.styled.jsx","components/CategoryReportList/NoResult/NoResult.jsx","components/ReportBalance/ReportBalance.styled.jsx","components/Text/Text.styled.jsx","components/Wrapper/Wrapper.styled.jsx","components/MonthPicker/MonthPickerStyle.styled.jsx","components/MonthPicker/MonthPicker.jsx","components/Balance/BalanceOval/BalanceOval.styled.jsx","components/Balance/BalanceOval/BalanceOval.jsx","redux/setDataDiagram/dataDiagram-selector.js","components/Chart/Chart.jsx","components/Chart/ChartMobile.jsx","components/CategoryReportList/Card/CardStyle.styled.jsx","components/CategoryReportList/Card/svgName.js","components/CategoryReportList/Card/Card.jsx","components/CategoryReportList/CategoryStyled.jsx","components/CategoryReportList/CashPicker/CashPickerStyle.styled.jsx","components/CategoryReportList/CashPicker/CashPicker.jsx","components/CategoryReportList/CategoryReportList.js","components/ReportBalance/ReportBalance.jsx","pages/ReportPage.jsx","redux/getTransaction/transaction-selector.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport {device} from '../../../styles/utils'\r\n\r\nexport const NoResultDiv = styled.div`\r\npadding: 10px;\r\n\r\n& > img {\r\n    margin: 0px auto;\r\n\r\n    @media${device.tabletMax}{\r\n        width: 320px;\r\n    }\r\n    @media${device.tablet}{\r\n        width: 768px;\r\n    }\r\n    @media${device.desktop}{\r\n        width: 800px;\r\n    }\r\n}\r\n`\r\n","import { NoResultDiv } from './NoResult.styled';\r\nimport noResult from '../../../assets/img/noResult.png';\r\n\r\nfunction NoResult() {\r\n  return (\r\n    <NoResultDiv>\r\n        <img  src={noResult} alt=\"noResult\"/>\r\n    </NoResultDiv>\r\n  );\r\n}\r\n\r\nexport {NoResult}\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const ReportBalanceWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 40px;\r\n  padding: 21px 0px 26px 0px;\r\n\r\n  background: ${colors.white};\r\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\r\n  border-radius: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 30px;\r\n    padding: 16px 0px 16px 0px;\r\n\r\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n    border-radius: 30px;\r\n  }\r\n`;\r\nexport const ReportBalanceDiv = styled.div`\r\n  position: relative;\r\n  padding: 0px 15px;\r\n\r\n  @media ${device.tablet} {\r\n    display: flex;\r\n    padding: 0px 20px;\r\n  }\r\n\r\n  &:nth-child(1):after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -12px;\r\n    right: 0;\r\n    border-right: 1px solid ${colors.lineColor};\r\n    height: 70px;\r\n\r\n    @media ${device.tablet} {\r\n      top: -10px;\r\n      right: 0;\r\n      height: 36px;\r\n    }\r\n  }\r\n`;\r\nexport const ReportBalanceSum = styled.p`\r\n  margin: 0px;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  letter-spacing: 0.04em;\r\n\r\n  color: ${(props) => (props.expenses ? `${colors.redColor}` : `${colors.greenColor}`)};\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const SingleText = styled.p`\r\n  margin: auto;\r\n  margin-bottom: 24px;\r\n  width: ${(props) => props.width};\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: 0.04em;\r\n  text-transform: none;\r\n  text-align: ${(props) => props.align};\r\n  color: ${colors.textColor};\r\n  \r\n  @media ${device.tablet} {\r\n    margin:0;\r\n    margin-bottom: 20px;\r\n    text-align: left;\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    width: 269px;\r\n  }\r\n`;\r\n// ?????\r\nexport const ReportBalanceText = styled.p`\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: ${colors.textColor}\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 0px;\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { device, colors } from \"../../styles/utils\";\r\nimport pairCabbages from \"../../assets/img/pairCabbages.png\";\r\nimport cabbagesBottom from \"../../assets/img/cabbagesBottom.png\";\r\n\r\n\r\nexport const ContentWrapper = styled.div`\r\n  width: 100%;\r\n  padding-top: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: calc(100vh - 56px);\r\n  background-repeat: no-repeat;\r\n\r\n  @media ${device.tablet} {\r\n    justify-content: flex-start;\r\n    padding: 40px 30px 83px;\r\n    background-image: url(${pairCabbages});\r\n    background-position: calc((100% / 2) + 200px) calc(100% - 24px);\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    max-width: 1240px;\r\n    padding: 40px 90px 83px;\r\n    background-image: url(${cabbagesBottom});\r\n    background-position: 50% calc(100% + 25px);\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 20px 60px 20px;\r\n    background: ${colors.white};\r\n    border-radius: 0px 0px 30px 30px;\r\n  }\r\n`;\r\n\r\nexport const DesktopOverlayShadow = styled.div`\r\n  @media ${device.desktop} {\r\n    width: 100%;\r\n    background: ${colors.white};\r\n    border-radius: 0px 30px 30px 30px;\r\n    box-shadow: 0 10px 60px rgba(170, 178, 197, 0.2);\r\n  }\r\n`;\r\nexport const OverlayMobile = styled.div`\r\n  align-content: flex-end;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const AuthWrapper = styled.div`\r\n  position: absolute;\r\n  top: 255px;\r\n  left: 50%;\r\n  -webkit-transform: translate(-50%);\r\n  transform: translate(-50%);\r\n\r\n  padding: 40px 18px 53px 29px;\r\n  padding: 40px 18px 53px 18px;\r\n  width: 300px;\r\n  height: 525px;\r\n  background: ${colors.white};\r\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\r\n  border-radius: 30px;\r\n\r\n  @media ${device.tablet} {\r\n    top: 300px;\r\n    width: 436px;\r\n    height: 535px;\r\n    padding: 50px 85px 53px 85px;\r\n  }\r\n  @media ${device.desktop} {\r\n    top: 173px;\r\n    left: 74%;\r\n  }\r\n`;\r\n\r\nexport const ReportPageWrapper = styled.div`\r\n  padding: 15px 0px;\r\n\r\n  @media ${device.tablet} {\r\n\r\n    padding: 32px 0px 76px;\r\n    background-image: url(${pairCabbages});\r\n    background-position: calc((100% / 2) + 200px) calc(100% + 40px);\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n   background-image: url(${cabbagesBottom});\r\n   background-position: 50% calc(100% - 20px);\r\n\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    width: 1060px;\r\n    margin: 0px auto;\r\n    padding: 40px 0px 75px 0px;\r\n  }\r\n`;\r\n\r\nexport const ChartTabletWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 422px;\r\n  padding: 20px 15px;\r\n  background: ${colors.white};\r\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n  border-radius: 30px;\r\n`;\r\n\r\nexport const ReportPageTopWrapper = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const WrapperLoginContainer = styled.section`\r\n  height: 750px;\r\n  @media ${device.desktop} {\r\n    height: 0;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../styles/utils\";\r\n\r\nexport const MonthPickerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media ${device.tabletMax} {\r\n    padding-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const MonthPickerText = styled.p`\r\n  margin-bottom: 5px;\r\n  letter-spacing: 0.04em;\r\n  color: ${colors.textColorSecond};\r\n`;\r\n\r\nexport const Arrow = styled.a`\r\n  width: 7px;\r\n  height: 12px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nexport const MonthPickerSpan = styled.span`\r\n  width: 164px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 2px 0px;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  color: ${colors.black};\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  MonthPickerWrapper,\r\n  MonthPickerText,\r\n  Arrow,\r\n  MonthPickerSpan,\r\n} from \"./MonthPickerStyle.styled\";\r\nimport { SvgIcon } from \"../SvgIcon\";\r\nimport { getDataForDiagram } from \"../../redux/setDataDiagram/dataDiagram-operation\";\r\n\r\nfunction MonthPicker() {\r\n  const dispatch = useDispatch();\r\n\r\n  const text = \"Текущий период:\";\r\n\r\n  const month = [\r\n    \"январь\",\r\n    \"февраль\",\r\n    \"март\",\r\n    \"апрель\",\r\n    \"май\",\r\n    \"июнь\",\r\n    \"июль\",\r\n    \"август\",\r\n    \"сентябрь\",\r\n    \"октябрь\",\r\n    \"ноябрь\",\r\n    \"декабрь\",\r\n  ];\r\n\r\n  let currentDate = new Date();\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(\r\n    month.find((item, index) => index === currentDate.getMonth()),\r\n  );\r\n  const [currentYear, setCurrentYear] = useState(currentDate.getFullYear());\r\n\r\n  function handleClickLeft(e) {\r\n    e.preventDefault();\r\n    const index = month.indexOf(currentMonth);\r\n    let getMonth = index.toString();\r\n    if (getMonth.length === 1) getMonth = \"0\" + getMonth;\r\n    if (getMonth === \"00\") getMonth = \"12\";\r\n    if (index !== 0) {\r\n      setCurrentMonth(month[index - 1]);\r\n      dispatch(getDataForDiagram(currentYear.toString() + getMonth));\r\n      return;\r\n    }\r\n    setCurrentYear(currentYear - 1);\r\n    setCurrentMonth(month[month.length - 1]);\r\n    dispatch(getDataForDiagram((currentYear - 1).toString() + getMonth));\r\n    return;\r\n  }\r\n\r\n  function handleClickRight(e) {\r\n    e.preventDefault();\r\n    const index = month.indexOf(currentMonth);\r\n    let getMonth = (index + 2).toString();\r\n    if (getMonth.length === 1) getMonth = \"0\" + getMonth;\r\n    if (getMonth === \"13\") getMonth = \"01\";\r\n    if (index !== month.length - 1) {\r\n      setCurrentMonth(month[index + 1]);\r\n      dispatch(getDataForDiagram(currentYear.toString() + getMonth));\r\n      return;\r\n    }\r\n    setCurrentYear(currentYear + 1);\r\n    setCurrentMonth(month[0]);\r\n\r\n    dispatch(getDataForDiagram((currentYear + 1).toString() + getMonth));\r\n    return;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let getMonth = (new Date().getMonth() + 1).toString();\r\n    const getYear = new Date().getFullYear().toString();\r\n    if (getMonth.length === 1) getMonth = \"0\" + getMonth;\r\n\r\n    dispatch(getDataForDiagram(getYear + getMonth));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MonthPickerWrapper>\r\n      <MonthPickerText>{text}</MonthPickerText>\r\n      <MonthPickerSpan>\r\n        <Arrow onClick={handleClickLeft}>\r\n          <SvgIcon w={7} h={12} idIcon={\"#left\"} />\r\n        </Arrow>\r\n        {[currentMonth, \" \", currentYear]}\r\n        <Arrow onClick={handleClickRight}>\r\n          <SvgIcon w={7} h={12} idIcon={\"#right\"} />\r\n        </Arrow>\r\n      </MonthPickerSpan>\r\n    </MonthPickerWrapper>\r\n  );\r\n}\r\n\r\nexport default MonthPicker;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../../styles/utils\";\r\n\r\nexport const OvalBalanceSpan = styled.div`\r\n  padding-bottom: 30px;\r\n\r\n  @media ${device.tablet} {\r\n    display: flex;\r\n    padding-bottom: 0px;\r\n  }\r\n`;\r\n\r\nexport const OvalBalanceDiv = styled.div`\r\n    display: inline-block;\r\n    width: 183px;\r\n    padding: 14px 5px;\r\n    font-weight: bold;\r\n    color: ${colors.black};\r\n    border: 2px solid ${colors.white};\r\n    border-radius: 22px 22px 22px 22px;\r\n    background: none;\r\n\r\n    @media ${device.tablet} {\r\n        width: 125px;\r\n        padding: 13px 5px;\r\n    }\r\n    `;\r\n\r\nexport const BalanceTextOval = styled.p`\r\n  margin-bottom: 6px;\r\n  font-weight: 500;\r\n  color: ${colors.textColorSecond};\r\n\r\n  @media ${device.tablet} {\r\n    margin-bottom: 0px;\r\n    margin-right: 21px;\r\n    padding: 14px 0px;\r\n  }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getBalanceUser } from \"../../../redux/getBalance/balance-selector\";\r\nimport {\r\n  OvalBalanceSpan,\r\n  OvalBalanceDiv,\r\n  BalanceTextOval,\r\n} from \"./BalanceOval.styled\";\r\n\r\n// ВАЖНО !!!! - BalanceOval принимает const (или prop?) = СУММА текущего баланса, который получает с БЭКа.\r\n// Также сумму баланса с БЭКа привести к формату \"00 000,00\" через number.toLocaleString('ru-RU')\r\nfunction BalanceOval() {\r\n  const balance = useSelector(getBalanceUser);\r\n  const text = \"UAH\";\r\n\r\n  return (\r\n    <OvalBalanceSpan>\r\n      <BalanceTextOval>Баланс:</BalanceTextOval>\r\n      <OvalBalanceDiv>{[balance, \" \", text]}</OvalBalanceDiv>\r\n    </OvalBalanceSpan>\r\n  );\r\n}\r\n\r\nexport { BalanceOval };\r\n","export const getDataForInput = state => state.dataDiagram.data.data;\r\nexport const diagramLoading = state => state.dataDiagram.data.isLoading;\r\nexport const getBullForChangePage = state => state.dataDiagram.bull;\r\nexport const getDataDiagram = state => state.dataDiagram.dataForDiagram;\r\n","import React, { PureComponent } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getDataDiagram,\r\n  getDataForInput,\r\n} from \"../../redux/setDataDiagram/dataDiagram-selector\";\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  LabelList,\r\n  Cell,\r\n  Text,\r\n} from \"recharts\";\r\n\r\n// import EllipsisText from \"react-ellipsis-text\"\r\n// {/* <EllipsisText text={name} length={6} /> */}\r\n\r\nclass CustomizedAxisTick extends PureComponent {\r\n  render() {\r\n    const { x, y, payload } = this.props;\r\n    return <Text x={x} y={y} width={60} textAnchor=\"middle\" verticalAnchor=\"start\">{payload.value}</Text>\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction Chart() {\r\n  const getDataChart = useSelector(getDataDiagram);\r\n  const data = useSelector(getDataForInput);\r\n\r\n  const arrayFromRender = data ? getDataChart : [];\r\n  console.log('arrayFromRender: ', arrayFromRender);\r\n\r\n  const colors = [\"#FF751D\", \"#FFDAC0\"];\r\n\r\n  return (\r\n    <ResponsiveContainer width={arrayFromRender.length * 63} height={382}>\r\n      <BarChart data={arrayFromRender} >\r\n        <CartesianGrid vertical={false} />\r\n        <Bar\r\n          dataKey=\"value\"\r\n          maxBarSize={38}\r\n          radius={[10, 10, 0, 0]}\r\n        >\r\n          {arrayFromRender.map((entry, index) => (\r\n            <Cell\r\n              key={`cell-${index}`}\r\n              fill={index % 3 === 0 ? colors[0] : colors[1]}\r\n            />\r\n          ))}\r\n          <LabelList\r\n            dataKey={\"value\"}\r\n            width={100}\r\n            position=\"top\"\r\n            offset={10}\r\n            fill={\"#52555F\"}\r\n            formatter={(number) => `${number.toLocaleString(\"ru-RU\")} грн`}\r\n          />\r\n        </Bar>\r\n        <XAxis \r\n          dataKey=\"name\" \r\n          tickLine={false} \r\n          axisLine={false} \r\n          interval={0}\r\n          height={50}\r\n          tick={<CustomizedAxisTick />}\r\n          // angle={30} \r\n          // dy={20} \r\n          // dx={30}\r\n          // padding={{ bottom: 100 }}\r\n          // tick={{textAnchor: \"start\", width: 100, scaleToFit: 'true'}}\r\n          // width={100}\r\n          />\r\n        <YAxis dataKey=\"value\" hide tickCount={10} axisLine={false}/>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getDataDiagram,\r\n  getDataForInput,\r\n} from \"../../redux/setDataDiagram/dataDiagram-selector\";\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  LabelList,\r\n  Cell,\r\n} from \"recharts\";\r\n\r\nfunction ChartMobile() {\r\n  const getDataChart = useSelector(getDataDiagram);\r\n  const data = useSelector(getDataForInput);\r\n\r\n  const arrayFromRender = data ? getDataChart : [];\r\n\r\n  const colors = [\"#FF751D\", \"#FFDAC0\"];\r\n\r\n  return (\r\n    <ResponsiveContainer width={300} height={arrayFromRender.length * 50}>\r\n      <BarChart\r\n        data={arrayFromRender}\r\n        layout=\"vertical\"\r\n        margin={{ top: 30, right: 50, bottom: 0, left: 15 }}\r\n      >\r\n        <Bar\r\n          dataKey=\"value\"\r\n          fill=\"#FF751D\"\r\n          barSize={15}\r\n          radius={[0, 10, 10, 0]}\r\n        >\r\n          {arrayFromRender.map((entry, index) => (\r\n            <Cell\r\n              key={`cell-${index}`}\r\n              fill={index % 3 === 0 ? colors[0] : colors[1]}\r\n            />\r\n          ))}\r\n          <LabelList\r\n            dataKey=\"value\"\r\n            width={100}\r\n            position=\"right\"\r\n            // offset={0}\r\n            // dy={-20}\r\n            // dx={-68}\r\n            fill={\"#52555F\"}\r\n            formatter={number => `${number.toLocaleString(\"ru-RU\")} грн`}\r\n            style={{\r\n              fontSize: \"10px\",\r\n            }}\r\n          />\r\n        </Bar>\r\n        <XAxis type=\"number\" hide />\r\n        <YAxis\r\n          dataKey=\"name\"\r\n          type=\"category\"\r\n          width={180}\r\n          tickLine={false}\r\n          axisLine={false}\r\n          mirror\r\n          dy={-15}\r\n          dx={-7}\r\n          // margin={{top: 20, right: 20, bottom: 20, left: 20}}\r\n          style={{\r\n            fontSize: \"10px\",\r\n          }}\r\n        />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\nexport default ChartMobile;\r\n","import styled from \"@emotion/styled\";\r\nimport { colors, device } from \"../../../styles/utils\";\r\nimport btnLayout from \"../../../assets/img/btnLayout.png\";\r\nimport btnLayoutActiv from \"../../../assets/img/btnLayoutActiv.png\";\r\n\r\nexport const CardItem = styled.li`\r\n  position: relative;\r\n  display: inline-block;\r\n  text-align: center;\r\n\r\n  @media ${device.tablet} {\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n    flex-basis: calc(100% / 6 - 20px);\r\n  }\r\n\r\n  @media ${device.tabletMax} {\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n    margin-bottom: 20px;\r\n    flex-basis: calc(100% / 3 - 10px);\r\n\r\n    &:nth-child(2):before{\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      top: 120%;\r\n      right: -118%;\r\n      height: 1px;\r\n      width: 300px;\r\n      background: ${colors.lineColor};\r\n  }\r\n\r\n    &:nth-child(5):before{\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      top: 120%;\r\n      right: -118%;\r\n      height: 1px;\r\n      width: 300px;\r\n      background: ${colors.lineColor};\r\n  }\r\n\r\n    &:nth-child(8):before{\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      top: 120%;\r\n      right: -118%;\r\n      height: 1px;\r\n      width: 300px;\r\n      background: ${colors.lineColor};\r\n    }\r\n\r\n`;\r\n\r\nexport const CardText = styled.span`\r\n  display: block;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n  color: ${colors.textColor};\r\n`;\r\n\r\nexport const CardBtnSvg = styled.button`\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: 0;\r\n\r\n  &:after {\r\n    content: url(${btnLayout});\r\n    position: absolute;\r\n    left: 17%;\r\n    bottom: 18%;\r\n    z-index: -1;\r\n  }\r\n  &:hover {\r\n    &::after {\r\n      content: url(${btnLayoutActiv});\r\n      z-index: -1;\r\n    }\r\n  }\r\n\r\n  & svg {\r\n    &:hover,\r\n    &:focus {\r\n      fill: ${colors.orange};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SvgLayoutCard = styled.svg`\r\n  width: 56px;\r\n  height: 46px;\r\n  position: absolute;\r\n  top: 0;\r\n`;\r\n\r\nexport const CardSignature = styled.span`\r\n  display: block;\r\n  margin-top: 5px;\r\n  width: 90px;\r\n  text-transform: uppercase;\r\n  color: ${colors.textColor};\r\n  @media ${device.tablet} {\r\n    min-width: 90px;\r\n  }\r\n`;\r\n","export const svgName = [\r\n  {\r\n    svg: \"#icon-car\",\r\n    category: \"Транспорт\",\r\n  },\r\n  {\r\n    svg: \"#icon-products\",\r\n    category: \"Продукты\",\r\n  },\r\n  {\r\n    svg: \"#icon-hands-holding-heart\",\r\n    category: \"Здоровье\",\r\n  },\r\n  {\r\n    svg: \"#icon-alcohol\",\r\n    category: \"Алкоголь\",\r\n  },\r\n  {\r\n    svg: \"#icon-kite\",\r\n    category: \"Развлечение\",\r\n  },\r\n  {\r\n    svg: \"#icon-couch\",\r\n    category: \"Все для дома\",\r\n  },\r\n  {\r\n    svg: \"#icon-tools\",\r\n    category: \"Техника\",\r\n  },\r\n  {\r\n    svg: \"#icon-invoice\",\r\n    category: \"Коммуналка, связь\",\r\n  },\r\n  {\r\n    svg: \"#icon-hobby\",\r\n    category: \"Спорт, хобби\",\r\n  },\r\n  {\r\n    svg: \"#icon-book\",\r\n    category: \"Образование\",\r\n  },\r\n  {\r\n    svg: \"#icon-other\",\r\n    category: \"Прочее\",\r\n  },\r\n  {\r\n    svg: \"#icon-salary\",\r\n    category: \"ЗП\",\r\n  },\r\n  {\r\n    svg: \"#icon-additional-salary\",\r\n    category: \"Доп. доход\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SvgIcon } from \"../../SvgIcon\";\r\nimport {\r\n  CardItem,\r\n  CardText,\r\n  CardBtnSvg,\r\n  CardSignature,\r\n} from \"./CardStyle.styled\";\r\nimport { svgName } from \"./svgName\";\r\nimport {\r\n  getDataForInput,\r\n  getBullForChangePage,\r\n} from \"../../../redux/setDataDiagram/dataDiagram-selector\";\r\nimport { sortDataForDiagram } from \"../../../redux/setDataDiagram/dataDiagram-slice\";\r\n\r\nfunction Card({ key, value, category }) {\r\n  const bull = useSelector(getBullForChangePage);\r\n  const data = useSelector(getDataForInput);\r\n  const dispatch = useDispatch();\r\n  const svgPath = svgName.find(item => item.category === category);\r\n  return (\r\n    <CardItem key={key}>\r\n      <CardBtnSvg\r\n        type=\"button\"\r\n        onClick={() => dispatch(sortDataForDiagram({ category, bull, data }))}\r\n      >\r\n        <CardText>{value.toLocaleString(\"ru-RU\")}</CardText>\r\n        <SvgIcon w={56} h={56} idIcon={svgPath.svg} />\r\n        <CardSignature>{category}</CardSignature>\r\n      </CardBtnSvg>\r\n    </CardItem>\r\n  );\r\n}\r\n\r\nexport default Card;","import styled from \"@emotion/styled\";\r\nimport { device, colors } from \"../../styles/utils\";\r\n\r\nexport const CategoryList = styled.ul`\r\n  @media ${device.mobileS} {\r\n    margin-left: -10px;\r\n    margin-top: -10px;\r\n  }\r\n  @media ${device.tablet} {\r\n    margin-left: -20px;\r\n    margin-top: -20px;\r\n  }\r\n  @media ${device.desktop} {\r\n    width: 668px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nexport const CategoryListWrapper = styled.div`\r\n  border-bottom: 1px solid ${colors.lineColor};\r\n\r\n  @media ${device.tablet} {\r\n    padding: 20px 30px;\r\n    margin-bottom: 30px;\r\n\r\n    background-color: ${colors.white};\r\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n    border-radius: 30px;\r\n\r\n    border-bottom: none;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { device, colors } from \"../../../styles/utils\";\r\n\r\nexport const CashPickerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-bottom: 15px;\r\n\r\n  @media ${device.tablet} {\r\n    padding-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const CashPickerDiv = styled.div`\r\n  width: 134px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2px 0px;\r\n`;\r\n\r\nexport const Arrow = styled.a`\r\n  width: 7px;\r\n  height: 12px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nexport const CashPickerSpan = styled.span`\r\n  width: 96px;\r\n  margin: 0px 15px;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  color: ${colors.black};\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getBullForChangePage,\r\n  getDataForInput,\r\n} from \"../../../redux/setDataDiagram/dataDiagram-selector\";\r\nimport {\r\n  changeDiagram,\r\n  sortDataForDiagram,\r\n} from \"../../../redux/setDataDiagram/dataDiagram-slice\";\r\nimport {\r\n  CashPickerWrapper,\r\n  CashPickerDiv,\r\n  Arrow,\r\n  CashPickerSpan,\r\n} from \"./CashPickerStyle.styled\";\r\n\r\nimport { SvgIcon } from \"../../SvgIcon\";\r\n\r\nfunction CashPicker() {\r\n  const bull = useSelector(getBullForChangePage);\r\n  const data = useSelector(getDataForInput);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    if (bull) {\r\n      if (data.income.length === 0) {\r\n        dispatch(sortDataForDiagram([]));\r\n\r\n        return;\r\n      }\r\n      dispatch(\r\n        sortDataForDiagram({ category: data.income[0].category, bull, data }),\r\n      );\r\n      return;\r\n    }\r\n    if (!bull) {\r\n      if (data.expense.length === 0) {\r\n        dispatch(sortDataForDiagram([]));\r\n        return;\r\n      }\r\n      dispatch(\r\n        sortDataForDiagram({ category: data.expense[0].category, bull, data }),\r\n      );\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }, [bull, data, dispatch]);\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    dispatch(changeDiagram(!bull));\r\n  }\r\n\r\n  let text = bull ? \"доходы\" : \"расходы\";\r\n\r\n  return (\r\n    <CashPickerWrapper>\r\n      <CashPickerDiv>\r\n        <Arrow onClick={handleClick}>\r\n          <SvgIcon w={7} h={12} idIcon={\"#left\"} />\r\n        </Arrow>\r\n        <CashPickerSpan>{text}</CashPickerSpan>\r\n        <Arrow onClick={handleClick}>\r\n          <SvgIcon w={7} h={12} idIcon={\"#right\"} />\r\n        </Arrow>\r\n      </CashPickerDiv>\r\n    </CashPickerWrapper>\r\n  );\r\n}\r\n\r\nexport default CashPicker;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Card } from \"./Card\";\r\nimport { CategoryList, CategoryListWrapper } from \"./CategoryStyled\";\r\nimport { CashPicker } from \"./CashPicker\";\r\nimport {\r\n  getDataForInput,\r\n  getBullForChangePage,\r\n} from \"../../redux/setDataDiagram/dataDiagram-selector\";\r\nimport { NoResult } from \"./NoResult\";\r\n\r\nfunction CategoryReportList() {\r\n  const data = useSelector(getDataForInput);\r\n  const bull = useSelector(getBullForChangePage);\r\n\r\n  const dataIcon = bull ? data.income : data.expense;\r\n  const sortDataIcon = data\r\n    ? [...dataIcon].sort((a, b) => b.total - a.total)\r\n    : [];\r\n  const dataCheck = data ? dataIcon.length === 0 : false;\r\n\r\n  return (\r\n    <CategoryListWrapper>\r\n      <CashPicker />\r\n      <CategoryList>\r\n        {data &&\r\n          sortDataIcon.map(({ total, category }) => (\r\n            <Card key={uuidv4()} value={total} category={category} />\r\n          ))}\r\n      </CategoryList>\r\n      {dataCheck && <NoResult />}\r\n      {!data && <NoResult />}\r\n    </CategoryListWrapper>\r\n  );\r\n}\r\n\r\nexport default CategoryReportList;\r\n","import { useSelector } from \"react-redux\";\r\n// import { getExpenseUser } from \"../../redux/getBalance/balance-selector\";\r\nimport { getDataForInput } from \"../../redux/setDataDiagram/dataDiagram-selector\";\r\nimport {\r\n  ReportBalanceWrapper,\r\n  ReportBalanceDiv,\r\n  ReportBalanceSum,\r\n} from \"./ReportBalance.styled\";\r\nimport { ReportBalanceText } from \"../Text/Text.styled\";\r\nimport { LoaderReport } from \"../Loader\";\r\nimport { transactionLoading } from \"../../redux/getTransaction/transaction-selector\";\r\n\r\n// ВАЖНО !!!! - ReportBalance принимает const (или prop?) = СУММА расходов и доходов, которые получает с БЭКа.\r\n// Также суммы с БЭКа привести к формату \"00 000,00 грн\" через number.toLocaleString(\"ru-RU\", {style: \"currency\", currency: \"UAH\"})\r\n\r\nfunction ReportBalance() {\r\n  const balance = useSelector(getDataForInput);\r\n  const isLoading = useSelector(transactionLoading);\r\n  const expenses = balance ? `-${balance.sumOfExpense} грн` : `0 грн`;\r\n  const incomes = balance ? `+${balance.sumOfIncome} грн` : `0 грн`;\r\n\r\n  const textResponses = \"Расходы:\";\r\n  const textIncomes = \"Доходы:\";\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderReport />}\r\n      <ReportBalanceWrapper>\r\n        <ReportBalanceDiv>\r\n          <ReportBalanceText>{textResponses}</ReportBalanceText>\r\n          <ReportBalanceSum expenses>{expenses}</ReportBalanceSum>\r\n        </ReportBalanceDiv>\r\n        <ReportBalanceDiv>\r\n          <ReportBalanceText>{textIncomes}</ReportBalanceText>\r\n          <ReportBalanceSum>{incomes}</ReportBalanceSum>\r\n        </ReportBalanceDiv>\r\n      </ReportBalanceWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { ReportBalance };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Media from \"react-media\";\r\nimport { ArrowButton } from \"../components/Buttons\";\r\nimport { MonthPicker } from \"../components/MonthPicker\";\r\n\r\nimport { BalanceOval } from \"../components/Balance/BalanceOval\";\r\nimport { Chart, ChartMobile } from \"../components/Chart\";\r\n\r\nimport { CategoryReportList } from \"../components/CategoryReportList\";\r\nimport { ReportBalance } from \"../components/ReportBalance\";\r\nimport {\r\n  ReportPageWrapper,\r\n  ReportPageTopWrapper,\r\n  ChartTabletWrapper,\r\n} from \"../components/Wrapper/Wrapper.styled\";\r\n\r\nimport {  diagramLoading, getDataDiagram} from \"../redux/setDataDiagram/dataDiagram-selector\";\r\n\r\nimport { LoaderReport } from \"../components/Loader\";\r\n\r\nexport default function ReportPage() {\r\n  const isLoading = useSelector(diagramLoading);\r\n\r\n  const getDataChart = useSelector(getDataDiagram);\r\n  const dataCheck = getDataChart ? getDataChart.length ===0 : false;\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderReport />}\r\n      <ReportPageWrapper>\r\n        <Media query=\"(max-width: 767.98px)\" render={() => <ArrowButton />} />\r\n        <Media query=\"(max-width: 767.98px)\" render={() => <MonthPicker />} />\r\n        <Media query=\"(max-width: 767.98px)\" render={() => <BalanceOval />} />\r\n\r\n        <Media\r\n          query=\"(min-width: 768px)\"\r\n          render={() => (\r\n            <ReportPageTopWrapper>\r\n              <ArrowButton />\r\n              <BalanceOval />\r\n              <MonthPicker />\r\n            </ReportPageTopWrapper>\r\n          )}\r\n        />\r\n        <ReportBalance />\r\n\r\n        <CategoryReportList />\r\n        {!dataCheck && \r\n          <>\r\n            <Media query=\"(max-width: 767.98px)\" render={() => <ChartMobile />} />\r\n\r\n            <Media\r\n              query=\"(min-width: 768px)\"\r\n              render={() => (\r\n                <ChartTabletWrapper>\r\n                  <Chart />\r\n                </ChartTabletWrapper>\r\n              )}\r\n            />\r\n          </>\r\n        }\r\n        \r\n      </ReportPageWrapper>\r\n    </>\r\n  );\r\n}\r\n","export const getUserTransactionTheLastSixMounts = state =>\r\n  state.dataTransaction.data;\r\nexport const transactionLoading = state => state.dataTransaction.isLoading;\r\n"],"names":["NoResultDiv","styled","device","NoResult","src","noResult","alt","ReportBalanceWrapper","colors","ReportBalanceDiv","ReportBalanceSum","props","expenses","SingleText","width","align","ReportBalanceText","ContentWrapper","pairCabbages","cabbagesBottom","Overlay","DesktopOverlayShadow","OverlayMobile","AuthWrapper","ReportPageWrapper","ChartTabletWrapper","ReportPageTopWrapper","WrapperLoginContainer","MonthPickerWrapper","MonthPickerText","Arrow","MonthPickerSpan","dispatch","useDispatch","month","currentDate","Date","useState","find","item","index","getMonth","currentMonth","setCurrentMonth","getFullYear","currentYear","setCurrentYear","useEffect","toString","getYear","length","getDataForDiagram","onClick","e","preventDefault","indexOf","SvgIcon","w","h","idIcon","OvalBalanceSpan","OvalBalanceDiv","BalanceTextOval","BalanceOval","balance","useSelector","getBalanceUser","getDataForInput","state","dataDiagram","data","diagramLoading","isLoading","getBullForChangePage","bull","getDataDiagram","dataForDiagram","CustomizedAxisTick","this","x","y","payload","Text","textAnchor","verticalAnchor","value","PureComponent","getDataChart","arrayFromRender","console","log","ResponsiveContainer","height","BarChart","CartesianGrid","vertical","Bar","dataKey","maxBarSize","radius","map","entry","Cell","fill","LabelList","position","offset","formatter","number","toLocaleString","XAxis","tickLine","axisLine","interval","tick","YAxis","hide","tickCount","layout","margin","top","right","bottom","left","barSize","style","fontSize","type","mirror","dy","dx","CardItem","CardText","CardBtnSvg","btnLayout","btnLayoutActiv","CardSignature","svgName","svg","category","key","svgPath","sortDataForDiagram","CategoryList","CategoryListWrapper","CashPickerWrapper","CashPickerDiv","CashPickerSpan","handleClick","changeDiagram","income","expense","text","dataIcon","sortDataIcon","sort","a","b","total","dataCheck","uuidv4","ReportBalance","transactionLoading","sumOfExpense","incomes","sumOfIncome","Loader","ReportPage","query","render","getUserTransactionTheLastSixMounts","dataTransaction"],"sourceRoot":""}